using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Text;
using System.Threading.Tasks;
${sortFuncNamespace}

namespace ${namespace}
{
    public interface I${className}Repository
    {
        Task CreateAsync(${className} item);

        Task UpdateAsync(${className} item);

        Task DeleteAsync(Guid id);

        Task<${className}> GetAsync(Expression<Func<${className}, bool>> predicate, bool throwExceptionWhenNotFound = true);

        Task<IEnumerable<${className}>> GetAllAsync(Expression<Func<${className}, bool>>predicate = null, SortFunc<${className}>[] navigationProperties = null,
            int? page = 0, int? pageSize = 20);
    }
}
